#include "Enclave_t.h"
#include <sgx_tcrypto.h>
#include <string.h>


static const sgx_ec256_public_t g_static_pubkey = {
    .gx = { 0x07, 0x0d, 0x1f, 0x2f, 0x51, 0x12, 0x0f, 0x92, 0xcc, 0x45, 0x12, 0xc4, 0xaa, 0x19, 0x9a, 0x71, 0x49, 0xf8, 0x76, 0xe8, 0xab, 0x06, 0x25, 0xdf, 0x98, 0xf8, 0x2e, 0x57, 0xc5, 0x30, 0x17, 0x1c },
    .gy = { 0x5a, 0x35, 0xac, 0x3c, 0x65, 0x39, 0x24, 0xcf, 0x9e, 0x71, 0x6a, 0x36, 0xe0, 0x76, 0xf6, 0x0e, 0x38, 0x15, 0xa0, 0x47, 0x46, 0x3c, 0x95, 0x96, 0xb3, 0xc0, 0x17, 0x44, 0x53, 0x5f, 0x95, 0x67 }
};


int ecc_verify(uint8_t* data, size_t len,
               sgx_ec256_signature_t* signature) {
    sgx_ecc_state_handle_t ctx;
    uint8_t result = SGX_EC_INVALID_SIGNATURE;

    sgx_ecc256_open_context(&ctx);
    sgx_ecdsa_verify(data, (uint32_t)len, &g_static_pubkey, signature, &result, ctx);
    sgx_ecc256_close_context(ctx);

    return result == SGX_EC_VALID;
}


